#변수란?
#자료형의 값을 저장하는 메모리 공간

#변수 메모리 공간 만들기 문법
# = 기호를 사용한다
# 변수이름 = 변수에 저장할 값
#예
a = 1
b = "python"
c = [1,2,3]

#a변수가 가리키는 메모리의 주소를 확인 하는 방법
#예
a = [1,2,3]
#id함수는 변수가 가리키고 있는 객체의 주소값을 돌려주는 파이썬 내장 함수 이다.
print( id(a) )  # [1,2,3]리스트의 메모리 주소값은 26167936 이다.

#리스트를 복사할때
#예
#b변수에 a변수를 대입하면 b는 a와 완전히 동일하다고 할수 있다.
#다만 [1,2,3]리스트를 참조하는 변수가 a변수 1개에서 b변수가 추가 되어 2개로 늘어 났다는 차이만 있을 뿐이다.
a = [1,2,3]
b = a
print( id(a)  )  # a변수에 저장되어 있는 [1,2,3]리스트 메모리의 주소번지 23246968
print( id(b)  )  # b변수에 저장되어 있는 [1,2,3]리스트 메모리의 주소번지 23246968
#즉 a변수가 가리키는 대상[1,2,3]리스트와 b변수가 가리키는 대상 [1,2,3]리트스 메모리가 동일 하다는 것을 알수 있음

#각변수는 동일한 객체를 가리키고 있는지에 대해서 판단하는 파이썬 명령어 is
a = [1,2,3]
b = a
print(a is b)  # 참 True

#b변수를 생성할때 a변수의 값을 가져오면서 a와는 다른 주소를 가리키도록 만들수 없을까?
    #첫번째 방법 -> 리스트 전체를 가리키는 [:] 사용해서 복사하는 것이다
a = [1,2,3]
#    0 1 2
b = a[:] # 리스트 a의 처음 요소부터  끝요소까지 슬라이싱(잘라낸다)
a[1] = 4  # [1,2,3]중에서 인덱스1 위치에 4를  넣어 덮어 쓰기
print(a)
print(b)
#결론 : a리스트 값을 바꾸더라도  b리스트에는 영향을 끼치지 않는다.

    #두번쨰 방법  -> copy 모듈을 사용 하는 방법 이다
from copy import  copy  #copy모듈 내부에 존재 하는  copy()함수를 불러서 사용 하겠다.~
a = [1,2,3]
b = copy(a) # 리스트a의 처음 요소부터 끝요소까지 슬라이싱(잘라낸다)
            # b = copy(a) 코드는  b = a[:] 과 동일 하다.
a[1] = 4
print(a)
print(b)






























